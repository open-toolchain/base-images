---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: base-image-pipeline
spec:
  params:
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: repository
      description: the git repo containing source code. If empty, the repository url will be found from toolchain
      default: ""
    - name: branch
      description: the branch for the git repo
      default: "master"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: fail-on-lint-errors
      description: force failure of task when docker lint errors are found
      default: "true"
    - name: fail-on-scanned-issues
      description: force failure of task when vulnerability advisor scan issues are found
      default: "true"
    - name: path-to-context
      default: "."
    - name: path-to-dockerfile
      default: "."
    - name: dockerfile
      default: "Dockerfile"
    - name: build-args
      description: ibmcloud cr build argument list in the format 'KEY=VALUE' with a key-value pair per line.
      default: ""
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: registry-namespace
      description: container registry namespace
    - name: registry-create-namespace
      description: create container registry namespace if it doesn't already exists
      default: "true"
    - name: app-name
      description: application name
    - name: image-name
      description: image name
    - name: helm-chart-path
      description: |
        path to the folder containing the helm chart content (at least Chart.yaml).
        If not specified, it will default to first folder in /chart
      default: ""
    - name: dev-region
    - name: dev-resource-group
    - name: cluster-name
      description: the name of the cluster to target
    - name: dev-cluster-namespace
      description: the namespace
    - name: helm-upgrade-extra-args
      description: complementary argument for the helm upgrade command
      default: ""
    - name: pipeline-debug
      default: "0"
    - name: commons-hosted-region
      default: "https://raw.githubusercontent.com/open-toolchain/commons/master"
    - name: path-to-hadolint-config
      default: ""
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: extract-repository-url
      taskRef:
        name: toolchain-extract-value
      params:
        - name: expression
          # if a params.repository is given, it takes precedence
          value: '. as $toolchain | ["$(params.repository)"] | if .[0]=="" then $toolchain | .services[] | select(.toolchain_binding.name=="repo") | .dashboard_url else .[0] end'
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: git-clone
      taskRef:
        name: git-clone-repo
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: docker-lint
      runAfter: [git-clone]
      taskRef:
        name: linter-docker-lint
      params:
        - name: path-to-dockerfile
          value: $(params.path-to-dockerfile)
        - name: dockerfile
          value: $(params.dockerfile)
        - name: fail-on-lint-errors
          value: $(params.fail-on-lint-errors)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: path-to-hadolint-config
          value: $(params.path-to-hadolint-config)
      workspaces:
        - name: workspace
          workspace: pipeline-ws
    - name: containerize
      runAfter: [git-clone]
      taskRef:
        name: icr-execute-in-dind
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: container-registry-apikey-secret-key
          value: "apikey"
        - name: registry-create-namespace
          value: $(params.registry-create-namespace)
        - name: registry-region
          value: $(params.registry-region)
        - name: registry-namespace
          value: $(params.registry-namespace)
        - name: image-name
          value: $(params.image-name)
        - name: path-to-context
          value: $(params.path-to-context)
        - name: path-to-dockerfile
          value: $(params.path-to-dockerfile)
        - name: dockerfile
          value: $(params.dockerfile)
        - name: docker-commands
          value: |
            # Minting image tag using format: BUILD_NUMBER-BRANCH-COMMIT_ID-TIMESTAMP
            # e.g. 3-master-50da6912-20181123114435
            # (use build number as first segment to allow image tag as a patch release name according to semantic versioning)
            GIT_BRANCH="$(tasks.git-clone.results.git-branch)"
            GIT_COMMIT="$(tasks.git-clone.results.git-commit)"
            TIMESTAMP=$( date -u "+%Y%m%d%H%M%S")
            IMAGE_TAG=${TIMESTAMP}
            if [ ! -z "${GIT_COMMIT}" ]; then
              GIT_COMMIT_SHORT=$( echo ${GIT_COMMIT} | head -c 8 )
              IMAGE_TAG=${GIT_COMMIT_SHORT}-${IMAGE_TAG}
            fi
            if [ ! -z "${GIT_BRANCH}" ]; then IMAGE_TAG=${GIT_BRANCH}-${IMAGE_TAG} ; fi
            IMAGE_TAG=${BUILD_NUMBER}-${IMAGE_TAG}
            echo "$IMAGE_TAG"
            # Default docker build / inspect / push command
            docker build --tag "$IMAGE_URL:$IMAGE_TAG" --file $PATH_TO_DOCKERFILE/$DOCKERFILE $PATH_TO_CONTEXT
            docker inspect ${IMAGE_URL}:${IMAGE_TAG}
            docker push ${IMAGE_URL}:${IMAGE_TAG}
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: source
          workspace: pipeline-ws
    - name: vulnerability-advisor
      taskRef:
        name: icr-check-va-scan
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: container-registry-apikey-secret-key
          value: "apikey"
        - name: scan-report-file
          value: 'app-image-va-report.json'
        - name: fail-on-scanned-issues
          value: $(params.fail-on-scanned-issues)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: image-url
          value: $(tasks.containerize.results.image-repository)
        - name: image-digest
          value: $(tasks.containerize.results.image-digest)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws